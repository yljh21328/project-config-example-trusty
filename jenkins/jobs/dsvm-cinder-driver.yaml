- job-template:
    name: 'dsvm-tempest-my-cinder-driver'
    node: '{node}'

    wrappers:
      - timeout:
          timeout: 125
          fail: true
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe

          function pre_test_hook {{
              echo "Install thirdparty client libraries"
              #TODO: update your client here if needed, otherwise delete
              #sudo -H pip install mydriverclient
              echo "Configure the local.conf file to properly setup hp lefthand driver in cinder.conf"
              cat <<EOF >$BASE/new/devstack/local.conf

          [[post-config|\$CINDER_CONF]]
          [DEFAULT]
          enabled_backends=TES90
          default_volume_type=TES90

          [TES90]
          volume_backend_name = TES90
          qnap_management_url = http://10.77.230.90:8080
          volume_driver = cinder.volume.drivers.qnap.QnapISCSIDriver
          iscsi_ip_address = 10.77.230.91
          qnap_storage_protocol = iscsi
          san_login = admin
          san_password = admin
          qnap_poolname = manila-pool1
          san_thin_provision = False
          qnap_compression = True
          qnap_deduplication = False
          qnap_ssd_cache = True
          use_chap_auth = False
          chap_username = chris
          chap_password = chris12345678
          # Use post-extra because the tempest configuration file is
          # overwritten with the .sample after post-config.
          [[post-extra|\$TEMPEST_CONFIG]]
          [volume]
          storage_protocol=iSCSI
          vendor_name=QNAP
          EOF

              echo "Configure localrc file to properly setup CINDER_ENABLED_BACKENDS"
              cat <<EOF >>$BASE/new/devstack/localrc
          CINDER_ENABLED_BACKENDS=TES90:TES90
          EOF

          }}

          export -f pre_test_hook

          # To keep our CINDER_ENABLED_BACKENDS configuration in localrc
          export KEEP_LOCALRC=true

          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=120
          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_TEMPEST_REGEX="volume"

          # Let's use the http protocol instead of git protocol
          export GIT_BASE=https://git.openstack.org

          if [ -z $ZUUL_PROJECT ]; then
              export ZUUL_PROJECT=openstack-dev/ci-sandbox
          fi
          if [ -z $ZUUL_BRANCH ]; then
              export ZUUL_BRANCH=master
          fi

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log
